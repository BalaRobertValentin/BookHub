
@page
@model BookRental.Pages.Book.IndexModel

@{
    ViewData["Title"] = "Index";
}
@using System.ComponentModel.DataAnnotations
<link rel="stylesheet" href="~/css/BrowseBooks.css" asp-append-version="true" />

<body>
    <div class="row justify-content-center">
        <div class="col-md-9">
            <div class="row">
                <div class="col-12">
                    <p>
                        <a class="btn btn-primary" asp-page="Create">Create New</a>
                    </p>
                </div>
            </div>
            <form method="get">
                <div class="row">
                    <div class="col-md-8 col-lg-6">
                        <div class="input-group">
                            <input type="text" name="searchString" class="form-control" placeholder="Search for books" value="@Model.SearchString">
                            <span class="input-group-btn">
                                <button class="btn btn-primary" type="submit">Search</button>
                            </span>
                        </div>
                    </div>
                    <div class="col-md-4 col-lg-6">
                        <div class="input-group">
                            <select name="Sort" class="form-control" asp-for="Sort" onchange="this.form.submit()">
                                <option value="priceAsc">Increasing price</option>
                                <option value="priceDesc">Decreasing price</option>
                                <option value="newestBook">Newest</option>
                            </select>
                            <div class="input-group-append">
                                <button class="btn btn-primary" type="submit">Sort</button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            <hr>
            <div class="col-md-2">
                <div class="card mb-4 box-shadow">
                        <form method="get">
                            <div class="input-group mb-3">
                                <select name="LanguageSort" class="form-control" asp-for="LanguageSort" onchange="this.form.submit()">
                                    <option value="">All Languages</option>
                                    @foreach (var item in Enum.GetValues(typeof(BookRental.Models.Language)))
                                    {
                                        <option value="@item">@item</option>
                                    }
                                </select>
                            </div>
                            <div class="input-group mb-3">
                                <select name="GenreSort" class="form-control" asp-for="GenreSort" onchange="this.form.submit()">
                                    <option value="">All Genres</option>
                                    @foreach (var item in Enum.GetValues(typeof(BookRental.Models.Genre)))
                                    {
                                        var displayName = (typeof(BookRental.Models.Genre)).GetField(item.ToString())
                                        .GetCustomAttributes(typeof(DisplayAttribute), false)
                                        .SingleOrDefault() is DisplayAttribute displayAttribute ? displayAttribute.Name : item.ToString();

                                        <option value="@item">@displayName</option>
                                    }
                                </select>
                            </div>
                            <div class="input-group mb-3">
                                <select name="YearSort" class="form-control" asp-for="YearSort" onchange="this.form.submit()">
                                    <option value="">Sort by Year</option>
                                    @for (int year = 1950; year <= DateTime.Now.Year; year++)
                                    {
                                        <option value="@year">@year</option>
                                    }
                                </select>
                            </div>
                        </form>
                </div>
            </div>

            <div class="boxes">
                <div class="book-grid mx-auto">
                    @foreach (var item in Model.Books)
                    {
                        <div class="book-item">
                            <img class="icon" src="@Html.DisplayFor(modelItem => item.CoverImageUrl)">
                            <h3>@Html.DisplayFor(modelItem => item.Title)</h3>
                            <p>@Html.DisplayFor(modelItem => item.Author)</p>
                            <p>Price @Html.DisplayFor(modelItem => item.Price)$ </p>
                            <div class="button-container">
                                <form method="post" class="add-to-cart-form">
                                    <input type="hidden" name="id" value="@item.Id" />
                                    <button type="submit" asp-page-handler="AddToCart" class="details-btn">Buy</button>
                                </form>
                                <a class="details-btn" asp-page="./Details" asp-route-id="@item.Id">Details</a>
                                <a class="delete-btn" asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" asp-page="./Index" asp-route-currentPage="@(Model.CurrentPage - 1)" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>
                    @for (var i = 1; i <= Model.TotalPages; i++)
                    {
                        if (i == Model.CurrentPage)
                        {
                            <li class="page-item active"><a class="page-link" href="#">@i</a></li>
                        }
                        else
                        {
                            <li class="page-item"><a class="page-link" asp-page="./Index" asp-route-currentPage="@i">@i</a></li>
                        }
                    }
                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" asp-page="./Index" asp-route-currentPage="@(Model.CurrentPage + 1)" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                </ul>
            </nav>

        </div>
    </div>
</body>
